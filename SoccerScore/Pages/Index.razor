@page "/"

@using ScoreService
@using System.Linq

@inject ScoreService.IVeikkausliigaService ResultService

@code {

    protected override async Task OnInitializedAsync() {
        await Initialize();
    }

}


@functions{

    bool loading = true;
    IEnumerable<ResultGroup> _resultsGroups;
    IEnumerable<ResultGroup> resultsGroups;

    protected async Task Initialize() {
        _resultsGroups = await ResultService.GetResultGroups();
        resultsGroups = _resultsGroups;
        loading = false;
    }

    string _Query;
    string Query {
        get {
            return _Query;
        }
        set {
            resultsGroups = _resultsGroups;
            resultsGroups = resultsGroups.FilterByTeam(value);
            _Query = value;
        }
    }

}

<h1>Veikkausliiga results</h1>

@if (loading){
    <div class="text-center">
        <img src="/img/ajax-loader.gif" alt="loading..." />
    </div>
}else{
    @if (_resultsGroups != null) {

        <input type="text" @bind-value="Query" @bind-value:event="oninput" class="filter-input" placeholder="Filter by team name" />

        <div class="results-list">        
            @foreach (var group in resultsGroups) {
                <div class="result-group">
                    <h2 class="text-center">@group.MatchDate.ToString("d.M.yyyy")</h2>
                    @foreach (var match in group.Results) {
                        <a href="/details/@match.Id" class="result-item">
                            <span>@match.HomeTeam?.Name <strong>@match.HomeGoals</strong></span>
                            <span><strong>@match.AwayGoals</strong> @match.AwayTeam?.Name</span>                         
                        </a>                    
                    }
                </div>            
            }
        </div>
    } else { 
        <h2>Error: No results available.</h2>
    }
}